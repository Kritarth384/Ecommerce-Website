-> First i create a react app...
-> Just make a app using div in just App section
-> make everything in one place
-> Thank You.

-> then make everything component wise
-> first make a Pages and components folders
-> then insert Homepage in pages folder 
-> then insert directory folder, menu-item folder in components section
-> directory folder is used for state change like menu-items are like section that will be added if there are more data
-> directory component is used as useSTate in class Manner
-> where everything done in render section ... for that i also make constructor components
-> in render section i just take all values in as state in menuitem div section and update it...
-> with props or can say using values from directory i update the value in menu-item section 
-> last update the large size image there that i insert in className and update with sass
-> Thank You.

-> I update someofthings regarding background-image in menu items regarding its width and height
-> also add the google font.
-> then add the transition feature while hover through the menu-item...
-> thank you

-> Doing some routing part 
-> First add BrowerRouter to Index.js file
-> then add routing in App.js with Route under Routes..
-> then add Link command in menu-item.component.jsx to refer to other address when click on button..
-> thank you.

-> Then i create a Shop page
-> For that first i create Shop folder in Pages folder
-> and also create two folder Collection-preview and Collection-item in Component section 
-> and same two file jsx and data
-> In shop i fetch the data and send it two collection Preview folder in Component
-> Then in Collection preview i just create Title and items section 
-> and items section there which is image and title and price , make new folder Collection-item for it.
-> Then finally add css files there and do styling.

-> Then i made add createUserprofiledocument and set the state currentUser with userAuth
-> Then i create a signup page like signIn page and add in sign-inand signup page 
-> REmeber to on authentication of email password in firebase.



-> Last we add a header component 
-> and make a header folder in component section
-> for logo we make a assets folder in src section and add svg file there
-> then add some div and link component in header jsx file and do some styling in header scss.

-> Now we create a Sign IN page in pagegs section 
-> there jsx and scss file 
-> then create a signin component in component section
-> in signin section create a component of email, password we capture 
-> then make two component form-Input and custome button component where we use email and password in Form Input and button in custom button section 
-> There we use shrink thing if user type something it will shrink otherwise not, ,check it...
-> thank you.

-> make a Firebase folder to use Google Auth 
-> then write the Firebase command in utils.jsx 
-> then use that in App.js to find we are login or logout using ComponentDidMount to check login and ComponentWillUnmount to check logout 
-> Then add signIn and signOut in header component as we sigin and signout to display
-> Then do someStyling in my in Buttons in Google Button and box-sizing: border-box;

-> Create the user and store in our Database using firestore
-> just update the App.js and firebase.uitls.js file
-> where we create a async function createUser and then using await set in database 
-> last we added signin check if we able to login or not 
-> That's all firebase...may work later but that's all here ..

-> Now we add Redux / Reducer in our code
-> Now we just for user section
-> as we giving user info from App.js to header component
-> Now we are updting using user info from reducer not directly from App.js using connect in module in header component and App.js file 
-> using reducer we setCurrentuser.
-> For that we also add root-reducer and store js file that given diagram... too.


-> Now we have add cart and cartdropdown toggle component,
-> And using Reducer we are adding the action like when hidden is true then it will not show drop down meny with icon other show,,
-> for that we create cart redux -- cart reducer, cart action, cart type and do same thing and use mapDispatchToProps() to action this command when we click the icon and update it... 
-> nice..

-> Then we add more functionality in cart redux where when we click on cart-item button it will fetch the data of that item, and also take the quantity how many times we are doing that....
-> for Quantity we make cart.utils.js file.

-> We implemented redux and use it in showing all the items in drop-down menu 
-> With that we also use selectors in redux cart and user 
-> With that we able to take values with selector easily..


-> Then we make checkout Page and add the functionaliy of adding all the info there with clicking on go to Checkout page, 
-> add the functionality of update the price also in checkout page - total price.

-> As we refresh the page the all the content in checkout page will gone and we lose it..
-> to make it persistent we use reduxPersist library...something like this...
-> We use "LocalStorage" thing that store the info even we refresh the page, browser or window,
-> But "sessionStorage" is different.

-> We update store.js and root-reducer.js and index.js for persistent in content of cart...
-> in whitelist just wrote to make it persistent only 

-> Now we have done same redux thing with Shop reducer making and direcory reducer making 
-> and also make collection-Overview component to display the item for furthur display all the image of category lets see..
-> updated Everything to react-router-dom version 5.0.0
-> Then add the shop extension page collection component 
-> for every product hats, jackets.....
-> and integrate everything with adding selector in shop selector .js 


-> Now we added the Payment thing using Stripe for that we make a component stripe and do some changes in checkout page 
-> that's simple 
-> now deploying to heroku..:)
